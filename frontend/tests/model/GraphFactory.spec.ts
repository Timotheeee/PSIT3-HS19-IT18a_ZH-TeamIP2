import {GraphFactory} from "../../src/model/Graph/GraphFactory";
import { Graph } from "../../src/model/Graph/Graph";

const TEST_JSON_STRING_TEMP: string = "{\r\n    \"nodes\": [\r\n        {\r\n            \"id\": \"q1\",\r\n            \"metadata\": {\r\n                \"isHead\": true,\r\n                \"answerType\": \"input\",\r\n                \"title\": \"Hey thanks for testing out StudentScore! Do you wanna tell me your name? If not I''ll just call you Bob\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"q2\",\r\n            \"metadata\": {\r\n                \"answerType\": \"choice\",\r\n                \"title\": \"Do you play video games?\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"q3\",\r\n            \"metadata\": {\r\n                \"answerType\": \"choice\",\r\n                \"title\": \"Ah I see you are a person of culture as well %username%. Do you play League of Legends or World of Warcraft Classic?\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"q4\",\r\n            \"metadata\": {\r\n                \"answerType\": \"choice\",\r\n                \"title\": \"Do you exercise at least twice a week?\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"q5\",\r\n            \"metadata\": {\r\n                \"answerType\": \"choice\",\r\n                \"title\": \"Do you get more than 7 hours of sleep every night?\"\r\n            }\r\n        },\r\n        {\r\n            \"id\": \"fn1\",\r\n            \"metadata\": {\r\n                \"title\": \"Great! You are finished! Would you like to see the results?\",\r\n                \"answerType\": \"result\",\r\n                \"isFinalNode\": true\r\n            }\r\n        }\r\n    ],\r\n    \"edges\": [\r\n        {\r\n            \"source\": \"q1\",\r\n            \"target\": \"q2\",\r\n            \"edgeId\": \"e1\",\r\n            \"metadata\": {\r\n                \"answer\": \"Bob\",\r\n                \"score\": 0\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q2\",\r\n            \"target\": \"q3\",\r\n            \"edgeId\": \"e2\",\r\n            \"metadata\": {\r\n                \"answer\": \"Yes\",\r\n                \"score\": -10\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q2\",\r\n            \"target\": \"q4\",\r\n            \"edgeId\": \"e3\",\r\n            \"metadata\": {\r\n                \"answer\": \"No\",\r\n                \"score\": 10\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q3\",\r\n            \"target\": \"q5\",\r\n            \"edgeId\": \"e4\",\r\n            \"metadata\": {\r\n                \"answer\": \"Yes\",\r\n                \"score\": -1000\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q3\",\r\n            \"target\": \"q5\",\r\n            \"edgeId\": \"e5\",\r\n            \"metadata\": {\r\n                \"answer\": \"I play other games\",\r\n                \"score\": -200\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q4\",\r\n            \"target\": \"q5\",\r\n            \"edgeId\": \"e6\",\r\n            \"metadata\": {\r\n                \"answer\": \"Yes, I am a true gym rat!\",\r\n                \"score\": 200\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q4\",\r\n            \"target\": \"q5\",\r\n            \"edgeId\": \"e7\",\r\n            \"metadata\": {\r\n                \"answer\": \"No less than that\",\r\n                \"score\": 0\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q5\",\r\n            \"target\": \"fn1\",\r\n            \"edgeId\": \"e8\",\r\n            \"metadata\": {\r\n                \"answer\": \"Yes, I love my bed!\",\r\n                \"score\": 500\r\n            }\r\n        },\r\n        {\r\n            \"source\": \"q4\",\r\n            \"target\": \"fn1\",\r\n            \"edgeId\": \"e9\",\r\n            \"metadata\": {\r\n                \"answer\": \"No, I like Netflix way too much :(\",\r\n                \"score\": -500\r\n            }\r\n        }\r\n    ]\r\n}";

describe("MyGraphIterator", () => {
    describe("test createGraphFromJSON", () =>{
        test("should create a Graph object when called  with viable params.", () => {
            let graphFromJSON: Graph = GraphFactory.createTestGraph();
            expect(graphFromJSON).toBeInstanceOf(Graph);
        });

        test('test with TEMP JSON STRING', () => {
            let graphFromJSON: Graph = GraphFactory.createGraphFromJSON(TEST_JSON_STRING_TEMP);
            expect(graphFromJSON).toBeInstanceOf(Graph);
        });        
    });
  });